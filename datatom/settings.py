"""
Django settings for datatom project.

Generated by 'django-admin startproject' using Django 4.0.

For more information on this file, see
https://docs.djangoproject.com/en/4.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.0/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-_yf&ig@7n6^t4-ol##aiwyqw%i7*h1(xr3c8=izpqd3s&yi9lq'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']

# Application definition

INSTALLED_APPS = [
    # 'django.contrib.admin',
    # 'django.contrib.auth',
    'django.contrib.contenttypes',
    # 'django.contrib.sessions',
    # 'django.contrib.messages',
    # 'django.contrib.staticfiles',
    'user',
    'patch'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    # 'django.middleware.csrf.CsrfViewMiddleware',
    # 'django.contrib.auth.middleware.AuthenticationMiddleware',
    # 'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'common.middleware.CookieMiddleware'
]

ROOT_URLCONF = 'datatom.urls'

# TEMPLATES = [
#     {
#         'BACKEND': 'django.template.backends.django.DjangoTemplates',
#         'DIRS': [],
#         'APP_DIRS': True,
#         'OPTIONS': {
#             'context_processors': [
#                 'django.template.context_processors.debug',
#                 'django.template.context_processors.request',
#                 'django.contrib.auth.context_processors.auth',
#                 'django.contrib.messages.context_processors.messages',
#             ],
#         },
#     },
# ]

WSGI_APPLICATION = 'datatom.wsgi.application'

# Database
# https://docs.djangoproject.com/en/4.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'django',
        'PORT': 3306,
        'HOST': '192.168.1.12',
        'USER': 'root',
        'PASSWORD': '',
        'OPTIONS': {
            'autocommit': True,
            'init_command': "SET sql_mode='STRICT_TRANS_TABLES'",
        }
    },
    'node1': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'node1',
        'PORT': 3306,
        'HOST': '192.168.1.5',
        'USER': 'root',
        'PASSWORD': '',
        'OPTIONS': {
            'autocommit': True,
            'init_command': "SET sql_mode='STRICT_TRANS_TABLES'",
        }

    },
    'node2': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'node2',
        'PORT': 3306,
        'HOST': '192.168.1.9',
        'USER': 'root',
        'PASSWORD': '',
        'OPTIONS': {
            'autocommit': True,
            'init_command': "SET sql_mode='STRICT_TRANS_TABLES'",
        }
    },
    'patch': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'patch',
        'PORT': 3306,
        'HOST': '192.168.1.12',
        'USER': 'root',
        'PASSWORD': '',
        'OPTIONS': {
            'autocommit': True,
            'init_command': "SET sql_mode='STRICT_TRANS_TABLES'",
        }
    }
}

# Password validation
# https://docs.djangoproject.com/en/4.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/4.0/topics/i18n/

LANGUAGE_CODE = 'zh-hans'

TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.0/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
# 》》》》》》》》》》》》》》》》》》》》》》》自定义配置
# 媒体文件目录
MEDIA = 'media/'
# 配置默认的cache为redis的0号数据库，seesion的redis为redis的1号数据库
CACHES = {
    'default': {
        'BACKEND': 'django.core.cache.backends.redis.RedisCache',
        'LOCATION': 'redis://192.168.1.12:6379/0'
    },
    'SESSION': {
        'BACKEND': 'django.core.cache.backends.redis.RedisCache',
        'LOCATION': 'redis://192.168.1.12:6379/1'
    }
}
# redis数据库的分配
"""0-默认数据库，1-session,2-celery.worker,3-celery.result"""
# 配置session缓存到redis
SESSION_CACHE_ALIAS = 'SESSION'
SESSION_ENGINE = 'django.contrib.sessions.backends.cache'
SESSION_COOKIE_AGE = 60 * 60 * 24  # redis中保存的时间
# 配置邮件发送
EMAIL_HOST_USER = 'wan.li@datatom.com'
EMAIL_HOST_PASSWORD = '147896325wanLI'
DEFAULT_FROM_EMAIL = 'wan.li@datatom.com'
EMAIL_HOST = 'smtp.exmail.qq.com'
EMAIL_PORT = 465
EMAIL_USE_SSL = True
# 日志配置
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    # 格式配置
    'formatters': {
        'simple': {
            'format': '%(asctime)s %(module)s.%(funcName)s:%(message)s',
            'datefmt': '%Y-%m-%d %H:%M:%S',
        },
        'verbose': {
            'format': ('%(asctime)s %(levelname)s [%(process)d-%(threadName)s]'
                       '%(module)s.%(funcName)s line %(lineno)d--%(message)s'),
            'datefmt': '%Y-%m-%d %H:%M:%S',
        },
    },
    # 日志处理器
    'handlers': {
        'console': {
            'class': 'logging.StreamHandler',
            'level': 'DEBUG' if DEBUG else 'WARNING'
        },
        'info': {
            'class': 'logging.handlers.TimedRotatingFileHandler',
            'filename': f'{BASE_DIR}/logs/info.log',
            'when': 'D',  # 每天切割
            'backupCount': 30,  # 日志保留30天
            'formatter': 'simple',
            'level': 'INFO'
        },
        'error': {
            'class': 'logging.handlers.TimedRotatingFileHandler',
            'filename': f'{BASE_DIR}/logs/error.log',
            'when': 'W0',  # 每周一切割
            'backupCount': 4,  # 日志保留4周
            'formatter': 'verbose',
            'level': 'WARNING'
        },
    },
    'loggers': {
        'django': {
            'handlers': ['console'],
        },
        'inf': {
            'handlers': ['info'],
            'propagate': True,
            'level': 'INFO'

        },
        'err': {
            'handlers': ['error'],
            'propagate': True,
            'level': 'WARNING'
        },
    },
}
